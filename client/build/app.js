!function(){"use strict";angular.module("app",[])}(),function(){"use strict";function e(e,t,n){function r(e,r,a){var i={first_name:e,last_name:r};n.addUser(i,function(e,n){e?u.error=e:(u.notification="User added!",t(function(){u.notification=!1},3e3),n.avatar=u.userAvatar,u.users.unshift(n))})}function a(e,r,a,i,o){var s={id:e,first_name:r,last_name:a};n.updateUser(s,function(e,n){e?u.error=e:(u.users[o]=n,u.users[o].avatar=i,u.notification="User updated!",t(function(){u.notification=!1},3e3))})}function i(e,r){n.deleteUser(e,function(e){204===e.status?(u.users.splice(r,1),u.notification="User deleted!"):u.notification="There was an error!",t(function(){u.notification=!1},3e3)})}function o(e){u.users[e].avatar=null}var u=this;u.userAvatar="",u.notification=!1,u.addUser=r,u.updateUser=a,u.deleteUser=i,u.removeAvatar=o,e.imageUpload=function(e){var t=new window.FileReader;t.onload=u.imageIsLoaded,t.readAsDataURL(e.files[0])},u.imageIsLoaded=function(t){e.$apply(function(){u.userAvatar=t.target.result})},n.getUsers(function(e,t){e?u.error=e:u.users=t})}e.$inject=["$scope","$timeout","usersService"],angular.module("app").controller("usersController",e)}(),function(){"use strict";function e(){return{templateUrl:"components/users.template.html",controller:"usersController",controllerAs:"users",restrict:"E"}}angular.module("app").directive("users",e)}(),function(){"use strict";function e(e){function t(t){e.get(i+"?per_page=4&page="+Math.ceil(3*Math.random())).then(function(e){t(null,e.data.data)},function(e){t(e,null)})}function n(t,n){e.post(i,t).then(function(e){n(null,e.data)},function(e){n(e,null)})}function r(t,n){e.put(i,t).then(function(e){n(null,e.data)},function(e){n(e,null)})}function a(t,n){e.delete(i+"/"+t).then(function(e){n(e)})}var i="https://reqres.in/api/users";return{getUsers:t,addUser:n,updateUser:r,deleteUser:a}}e.$inject=["$http"],angular.module("app").service("usersService",e)}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
